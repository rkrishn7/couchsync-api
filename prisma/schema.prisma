generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["transactionApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model migrations {
  id     Int      @id @default(autoincrement())
  name   String
  run_on DateTime
}

model Party {
  id        Int       @id @default(autoincrement())
  hash      String    @unique
  joinUrl   String    @map("join_url")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @map("updated_at")
  hostId    Int?      @map("host_id")
  host      User?     @relation("parties_host_idTousers", fields: [hostId], references: [id])
  messages  Message[]
  users     User[]

  @@index([hostId], name: "host_id")
  @@map("parties")
}

model Message {
  id        Int       @id @default(autoincrement())
  content   String
  partyId   Int       @map("party_id")
  sentAt    DateTime  @map("sent_at")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @map("updated_at")
  userId    Int       @map("user_id")
  party     Party     @relation(fields: [partyId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@index([partyId], name: "party_id")
  @@index([userId], name: "user_id")
  @@map("messages")
}

model User {
  id            Int       @id @default(autoincrement())
  socketId      String    @map("socket_id")
  isActive      Boolean?  @map("is_active")
  partyId       Int?      @map("party_id")
  name          String
  avatarUrl     String?   @map("avatar_url")
  createdAt     DateTime? @default(now()) @map("created_at")
  updatedAt     DateTime? @default(now()) @map("updated_at")
  party         Party?    @relation(fields: [partyId], references: [id])
  messages      Message[]
  hostedParties Party[]   @relation("parties_host_idTousers")

  @@unique([socketId, isActive], name: "socket_id_is_active_unique")
  @@index([partyId], name: "party_id")
  @@map("users")
}
