generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["transactionApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model migrations {
  id     Int      @id @default(autoincrement())
  name   String
  run_on DateTime
}

model Party {
  id          Int       @id @default(autoincrement())
  hash        String    @unique
  joinUrl     String    @map(name: "join_url")
  isActive    Boolean?  @default(false) @map(name: "is_active")
  memberCount Int?      @default(0) @map(name: "member_count")
  createdAt   DateTime? @default(now()) @map(name: "created_at")
  updatedAt   DateTime? @default(now()) @map(name: "updated_at")
  messages    Message[]
  users       User[]

  @@map(name: "parties")
}

model Message {
  id        Int       @id @default(autoincrement())
  content   String
  partyId   Int       @map(name: "party_id")
  sentAt    DateTime  @map(name: "sent_at")
  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @default(now()) @map(name: "updated_at")
  userId    Int       @map(name: "user_id")
  party     Party     @relation(fields: [partyId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@index([partyId], name: "party_id")
  @@index([userId], name: "user_id")
  @@map(name: "messages")
}

model User {
  id        Int       @id @default(autoincrement())
  socketId  String    @map(name: "socket_id")
  isActive  Boolean?  @map(name: "is_active")
  partyId   Int?      @map(name: "party_id")
  name      String
  avatarUrl String?   @map(name: "avatar_url")
  createdAt DateTime? @default(now()) @map(name: "created_at")
  updatedAt DateTime? @default(now()) @map(name: "updated_at")
  party     Party?    @relation(fields: [partyId], references: [id])
  messages  Message[]

  @@unique([socketId, isActive], name: "socket_id_is_active_unique")
  @@index([partyId], name: "party_id")
  @@map(name: "users")
}
